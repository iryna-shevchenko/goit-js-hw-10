{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["'use strict';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  const delayInput = document.querySelector('[name=\"delay\"]');\n  const stateInput = document.querySelector('[name=\"state\"]:checked');\n\n  const delay = parseInt(delayInput.value, 10);\n\n  const promise = new Promise((resolve, reject) => {\n    if (delay <= 0) {\n      reject('Invalid delay value');\n    } else {\n      setTimeout(() => {\n        stateInput.value === 'fulfilled' ? resolve(delay) : reject(delay);\n      }, delay);\n    }\n  });\n\n  promise\n    .then(value => {\n      iziToast.success({\n        position: 'topRight',\n        title: 'Success!',\n        message: `Fulfilled promise in ${value}ms`,\n      });\n    })\n    .catch(value => {\n      iziToast.error({\n        position: 'topRight',\n        title: 'Error!',\n        message: `Rejected promise in ${value}ms`,\n      });\n    });\n}"],"names":["form","handleSubmit","event","delayInput","stateInput","delay","resolve","reject","value","iziToast"],"mappings":"wIAKA,MAAMA,EAAO,SAAS,cAAc,OAAO,EAC3CA,EAAK,iBAAiB,SAAUC,CAAY,EAE5C,SAASA,EAAaC,EAAO,CAC3BA,EAAM,eAAc,EAEpB,MAAMC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAa,SAAS,cAAc,wBAAwB,EAE5DC,EAAQ,SAASF,EAAW,MAAO,EAAE,EAE3B,IAAI,QAAQ,CAACG,EAASC,IAAW,CAC3CF,GAAS,EACXE,EAAO,qBAAqB,EAE5B,WAAW,IAAM,CACfH,EAAW,QAAU,YAAcE,EAAQD,CAAK,EAAIE,EAAOF,CAAK,CACjE,EAAEA,CAAK,CAEd,CAAG,EAGE,KAAKG,GAAS,CACbC,EAAS,QAAQ,CACf,SAAU,WACV,MAAO,WACP,QAAS,wBAAwBD,CAAK,IAC9C,CAAO,CACP,CAAK,EACA,MAAMA,GAAS,CACdC,EAAS,MAAM,CACb,SAAU,WACV,MAAO,SACP,QAAS,uBAAuBD,CAAK,IAC7C,CAAO,CACP,CAAK,CACL"}